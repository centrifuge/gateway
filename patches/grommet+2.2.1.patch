patch-package
--- a/node_modules/grommet/components/Select/index.d.ts
+++ b/node_modules/grommet/components/Select/index.d.ts
@@ -5,20 +5,20 @@ export interface SelectProps {
   alignSelf?: "start" | "center" | "end" | "stretch";
   gridArea?: string;
   margin?: "none" | "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | {bottom?: "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | string,horizontal?: "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | string,left?: "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | string,right?: "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | string,top?: "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | string,vertical?: "xxsmall" | "xsmall" | "small" | "medium" | "large" | "xlarge" | string} | string;
-  children?: (...args: any[]) => any;
+  children?: ((...args: any[]) => any);
   closeOnChange?: boolean;
   disabled?: boolean | number | string | object[];
-  disabledKey?: string | (...args: any[]) => any;
+  disabledKey?: string | ((...args: any[]) => any);
   dropAlign?: {top?: "top" | "bottom",bottom?: "top" | "bottom",right?: "left" | "right",left?: "left" | "right"};
   dropTarget?: object;
   focusIndicator?: boolean;
-  labelKey?: string | (...args: any[]) => any;
+  labelKey?: string | ((...args: any[]) => any);
   messages?: {multiple?: string};
   multiple?: boolean;
-  onChange?: (...args: any[]) => any;
-  onClose?: (...args: any[]) => any;
-  onOpen?: (...args: any[]) => any;
-  onSearch?: (...args: any[]) => any;
+  onChange?: ((...args: any[]) => any);
+  onClose?: ((...args: any[]) => any);
+  onOpen?: ((...args: any[]) => any);
+  onSearch?: ((...args: any[]) => any);
   options: string | JSX.Element | object[];
   placeholder?: string | React.ReactNode;
   plain?: boolean;
@@ -28,7 +28,7 @@ export interface SelectProps {
   dropHeight?: "xsmall" | "small" | "medium" | "large" | "xlarge" | string;
   value?: string | JSX.Element | object | string | object[];
   valueLabel?: React.ReactNode;
-  valueKey?: string | (...args: any[]) => any;
+  valueKey?: string | ((...args: any[]) => any);
   emptySearchMessage?: string;
 }
 
